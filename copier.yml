_subdirectory: template
author_name:
    type: str
    help: What is your name?
    
author_email:
    type: str
    help: What is your email?
    
rights_owner:
    type: str
    help: What name should we use for relevant rights? For example, if the rights holder is a company, include that here.
    default: "{{ author_name }}"

copyright_year:
    type: str
    help: "What year should we use for the initial copyright notice?"
    default: "2025"
    
gh_username:
    type: str
    help: What is your Github username? (Leave blank if you are not using Github for this project.)

project_name: 
    type: str
    help: What is your project name?
    
project_description:
    type: str
    help: Provide a short one-line description for the project.
    
project_slug:
    type: str
    help: What should we use as a slug for your project?
    default: "{{ project_name.lower()|replace(' ', '-')|replace('_', '-')}}"

package_name:
    type: str
    help: What should we name the module?
    default: "{{ project_name.lower()|replace(' ', '_')|replace('-', '_')}}"

python_versions:
    type: str
    help: Which versions of python do you want to support?
    choices:
        3.12: "3.12"
        3.13: "3.13"
        3.14: "3.14"
    multiselect: true
    default: "3.13"

license:
    type: str
    help: What license do you want to release this under?
    choices:
        Not Open Source: Proprietary
        MIT: MIT
        BSD: BSD-3-Clause
        Apache: Apache-2.0
        GPL3 or later: GPL-3.0-or-later
        LGPL3 or later: LGPL-3.0-or-later
        AGPL: AGPL-3.0-or-later
        Anti-Capitalist: anticap
        Unlicense/Public Domain: Unlicense
        Decide Later: Undefined
    default: "BSD-3-Clause"
        
include_coc:
    type: bool
    help: Include a template Code of Conduct?
    default: true

use_ga:
    type: bool
    help: Should we create workflows for Github Actions? (Requires Github username)
    default: false
    validator: "{% if not gh_username and use_ga %}You cannot generate Github Actions without providing a Github username.{% endif %}"

use_taylors_version:
    type: bool
    help: Should we add a workflow to name an issue with number 1989 to Taylor's version?
    default: false
    validator: "{% if not use_ga and use_taylors_version %}You cannot add this action unless you are using GitHub Actions.{% endif %}"
    
include_license_text:
    type: bool
    help: Include additional license text in header of every code file? (Requires precommit.)
    default: false
    validator: "{% if license in ['Undefined', 'Anti-Capitalist'] %}Your selected license is not compatible for license text insertion in code files.{% endif %}"

use_coveralls:
    type: bool
    help: Do you want to use coveralls? (Requires Github Actions)
    default: false
    validator: "{% if not use_ga and use_coveralls %}Configuring coveralls outside of Github Actions is not supported.{% endif %}"

_message_after_copy: |
    You project {{ project_name }} has been created successfully!
    
    Next steps:
    
    1. Change directory to your project root:
        
        cd {{ _copier_conf.dst_path }}
    
    2. Initialize your git repository.
        
        git init
    
    3. If you aren't using GitHub Pages for your documentation, update the site_url field in mkdocs.yml.
    
    4. Bootstrap your environment.
        
        just bootstrap
    
    5. Do your first commit
        
        git add .
        git commit -m ":tada: Initial commit"
    
    6. Read the generated CONTRIBUTING.md file for info on how to use your new environment.
    
    7. GitHub setup (optional)

        a. Create your repository and add it as a remote. 
        b. Turn on private vulnerability reporting as described here: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/configuring-private-vulnerability-reporting-for-a-repository
        c. If you plan on publishing to PyPI via the supplied GitHub action, you should add a repository secret available for GitHub Actions called PYPI_TOKEN. Otherwise, delete the publish.yml action.
             Use a PROJECT SCOPED access token. NEVER use a global account access token for this value!
        d. If using Coveralls, you will need to enable the repository link for your account via the coveralls management dashboard: https://coveralls.io
